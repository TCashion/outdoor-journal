    1. Determine the "proper" route (HTTP Method & Endpoint). 
    2. Add the UI (link and/or form) that will trigger the HTTP request that matches the route.
    3. Define the route in the appropriate router module that will match the HTTP request and map it to the <controller>.<method> that will perform the desired functionality.
    4. Add the controller action/method and be sure to export it.
    5. In the controller, perform necessary CRUD and either render (passing it data) in the case of a GET request, or redirect if data has been mutated (POST, PUT & DELETE). If rendering, code the view template if necessary.



CURRENT
AAU, I want to click a button on the trip's show page that takes me to an editable form. On this page I also want to be able to delete the trip.

    Two requests: 
        1st: get to edit form 
       
            1. Determine the "proper" route (HTTP Method & Endpoint). 

                GET /trips/:id/edit

            2. Add the UI (link and/or form) that will trigger the HTTP request that matches the route.

                Button on show page 

            3. Define the route in the appropriate router module that will match the HTTP request and map it to the <controller>.<method> that will perform the desired functionality.
            
                trips router
                router.get('/trips/:id/edit', authorizations, tripsCtrl.edit);
            
            4. Add the controller action/method and be sure to export it.
            
                function edit 
                    takes user to form page
            
            5. In the controller, perform necessary CRUD and either render (passing it data) in the case of a GET request, or redirect if data has been mutated (POST, PUT & DELETE). If rendering, code the view template if necessary.

                render edit view 
       
        2nd: submit new data 


            1. Determine the "proper" route (HTTP Method & Endpoint). 

                PUT /trips/:id

            2. Add the UI (link and/or form) that will trigger the HTTP request that matches the route.

                Form and submit button 

            3. Define the route in the appropriate router module that will match the HTTP request and map it to the <controller>.<method> that will perform the desired functionality.
            
                trips router
                router.put('trips/:id', authorizations, tripsCtrl.update)
            
            4. Add the controller action/method and be sure to export it.
            
                function update merges the two objects
            
            5. In the controller, perform necessary CRUD and either render (passing it data) in the case of a GET request, or redirect if data has been mutated (POST, PUT & DELETE). If rendering, code the view template if necessary.

                after submit, redirect to show page trips/:id 
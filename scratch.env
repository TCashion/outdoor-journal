    1. Determine the "proper" route (HTTP Method & Endpoint). 
    2. Add the UI (link and/or form) that will trigger the HTTP request that matches the route.
    3. Define the route in the appropriate router module that will match the HTTP request and map it to the <controller>.<method> that will perform the desired functionality.
    4. Add the controller action/method and be sure to export it.
    5. In the controller, perform necessary CRUD and either render (passing it data) in the case of a GET request, or redirect if data has been mutated (POST, PUT & DELETE). If rendering, code the view template if necessary.



AAU, I want to click a button on the trip's show page that takes me to an edittable form.

CURRENT
Add an end-date

    1. Determine the "proper" route (HTTP Method & Endpoint). 

        PUT /trips/:id

    2. Add the UI (link and/or form) that will trigger the HTTP request that matches the route.

        link below dates on main card 
        click it to reveal a form where you can enter the date 

    3. Define the route in the appropriate router module that will match the HTTP request and map it to the <controller>.<method> that will perform the desired functionality.

        on trips router
        router.put('/trips/:id', authorizations, tripsCtrl.update)

    4. Add the controller action/method and be sure to export it.
        PICKUP HERE
        PICKUP HERE
        PICKUP HERE
        PICKUP HERE
        PICKUP HERE
        PICKUP HERE
        update function merges the objects 

    5. In the controller, perform necessary CRUD and either render (passing it data) in the case of a GET request, or redirect if data has been mutated (POST, PUT & DELETE). If rendering, code the view template if necessary.

        redirect to /trips/:id
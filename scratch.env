    1. Determine the "proper" route (HTTP Method & Endpoint). 
    2. Add the UI (link and/or form) that will trigger the HTTP request that matches the route.
    3. Define the route in the appropriate router module that will match the HTTP request and map it to the <controller>.<method> that will perform the desired functionality.
    4. Add the controller action/method and be sure to export it.
    5. In the controller, perform necessary CRUD and either render (passing it data) in the case of a GET request, or redirect if data has been mutated (POST, PUT & DELETE). If rendering, code the view template if necessary.



CURRENT
AAU I want to be able to search for animals and add them to my list of animals 

    1. Determine the "proper" route (HTTP Method & Endpoint). 

        GET /trips/:id/animal

    2. Add the UI (link and/or form) that will trigger the HTTP request that matches the route.



    3. Define the route in the appropriate router module that will match the HTTP request and map it to the <controller>.<method> that will perform the desired functionality.

        router.post('/trip/:id/animal', authorizatons.isLoggedIn, authorization..., animalsCtrl.search);

    4. Add the controller action/method and be sure to export it.

        function search(req, res) {
            res.render...
            // render a search results page
        }

    5. In the controller, perform necessary CRUD and either render (passing it data) in the case of a GET request, or redirect if data has been mutated (POST, PUT & DELETE). If rendering, code the view template if necessary.

        res.render('trips/:id/animals/index', function(err) {
            //
        })



2nd request

    1. Determine the "proper" route (HTTP Method & Endpoint). 

        POST /trips/:id/animals

    2. Add the UI (link and/or form) that will trigger the HTTP request that matches the route.

        link on list

    3. Define the route in the appropriate router module that will match the HTTP request and map it to the <controller>.<method> that will perform the desired functionality.

        animals router
        router.post('/trips/:id/comments', authorizations, animalsCtrl.create);

    4. Add the controller action/method and be sure to export it.


function create(req, res) {
    trip.animals.push(req.body);
    trip.save(); 
    res.redirect(`/trips/${req.params.id}`);
};

    5. In the controller, perform necessary CRUD and either render (passing it data) in the case of a GET request, or redirect if data has been mutated (POST, PUT & DELETE). If rendering, code the view template if necessary.

        see above
